on:
  push:
  # workflow_dispatch:
    # inputs:
    #   logLevel:
    #     description: 'Log level'
    #     required: true
    #     default: 'warning'
    #     type: choice
    #     options:
    #       - info
    #       - warning
    #       - debug
    #   tags:
    #     description: 'Test scenario tags'
    #     required: true
    #     type: string
#  schedule:
#    - cron: "*/5 * * * *"
jobs:
  print-tag:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Debug
        run: |-
          echo ${{ github.repository }}

      - name: Generate
        run: |-
          mkdir secrets -p
          GENERATED_ID=zxc_123
          GENERATED_PASSWORD=$(dd bs=1024 if=/dev/urandom count=1 2>/dev/null | tr -dc 'a-zA-Z0-9\W' | fold -w 64 | head -n 1)

          echo "::add-mask::${GENERATED_ID}"
          echo "::add-mask::${GENERATED_PASSWORD}"

          echo "{\"id\":\"${GENERATED_ID}\", \"password\":\"${GENERATED_PASSWORD}\"}"
          echo "{\"id\":\"${GENERATED_ID}\", \"password\":\"${GENERATED_PASSWORD}\"}" >> secrets/secret_a.jsonl

      - name: Check gh
        run: |-
          DEBUG_SECRET_ENV="{\"id\":\"${GENERATED_ID}\", \"password\":\"${GENERATED_PASSWORD}\"}"
          gh secret set DEBUG_SECRET < secrets/secret_a.jsonl
          gh variable set DEBUG_VARIABLE < secrets/secret_a.jsonl
        env:
          GH_TOKEN: ${{ secrets.GW_7DAYS_RWSECRETS }}

      - name: List
        run: |-
          gh secret list
        env:
          GH_TOKEN: ${{ secrets.GW_7DAYS_RWSECRETS }}

      - name: List variable
        run: |-
          gh variable list
        env:
          GH_TOKEN: ${{ secrets.GW_7DAYS_RWSECRETS }}

      - name: Check secrets
        run: |-
          echo "${DEBUG_SECRET_ENV}"
        env:
          DEBUG_SECRET_ENV: ${{ secrets.DEBUG_SECRET }}

      - name: Check secrets II
        run: |-
          echo "${DEBUG_SECRET_ENV}" | jq
        env:
          DEBUG_SECRET_ENV: ${{ secrets.DEBUG_SECRET }}

      - name: Check variables
        run: |-
          echo "${DEBUG_VARIABLE_ENV}"
        env:
          DEBUG_VARIABLE_ENV: ${{ env.DEBUG_VARIABLE }}

      - name: Check variables II
        run: |-
          echo "${DEBUG_VARIABLE_ENV}" | jq
        env:
          DEBUG_VARIABLE_ENV: ${{ env.DEBUG_VARIABLE }}
